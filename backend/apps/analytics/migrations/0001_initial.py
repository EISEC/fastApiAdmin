# Generated by Django 5.0.6 on 2025-06-08 08:04

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DailyStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('date', models.DateField(unique=True, verbose_name='Дата')),
                ('total_requests', models.IntegerField(default=0, verbose_name='Всего запросов')),
                ('unique_users', models.IntegerField(default=0, verbose_name='Уникальных пользователей')),
                ('new_users', models.IntegerField(default=0, verbose_name='Новых пользователей')),
                ('total_posts', models.IntegerField(default=0, verbose_name='Всего постов')),
                ('new_posts', models.IntegerField(default=0, verbose_name='Новых постов')),
                ('avg_response_time', models.FloatField(default=0, verbose_name='Среднее время ответа')),
                ('error_rate', models.FloatField(default=0, verbose_name='Процент ошибок')),
                ('cache_hit_rate', models.FloatField(default=0, verbose_name='Cache Hit Rate')),
            ],
            options={
                'verbose_name': 'Ежедневная статистика',
                'verbose_name_plural': 'Ежедневная статистика',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='AnalyticsEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('event_type', models.CharField(choices=[('api_request', 'API Request'), ('user_login', 'User Login'), ('user_logout', 'User Logout'), ('post_view', 'Post View'), ('post_create', 'Post Create'), ('site_visit', 'Site Visit'), ('page_view', 'Page View'), ('error_occurred', 'Error Occurred')], max_length=50, verbose_name='Тип события')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP адрес')),
                ('user_agent', models.TextField(blank=True, null=True, verbose_name='User Agent')),
                ('url', models.URLField(blank=True, max_length=500, null=True, verbose_name='URL')),
                ('method', models.CharField(blank=True, max_length=10, null=True, verbose_name='HTTP метод')),
                ('status_code', models.IntegerField(blank=True, null=True, verbose_name='HTTP статус')),
                ('response_time', models.FloatField(blank=True, null=True, verbose_name='Время ответа (мс)')),
                ('metadata', models.JSONField(blank=True, default=dict, verbose_name='Дополнительные данные')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Событие аналитики',
                'verbose_name_plural': 'События аналитики',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['event_type', 'created_at'], name='analytics_a_event_t_6c35be_idx'), models.Index(fields=['user', 'created_at'], name='analytics_a_user_id_ecb128_idx'), models.Index(fields=['created_at'], name='analytics_a_created_546677_idx')],
            },
        ),
        migrations.CreateModel(
            name='UserSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('session_id', models.CharField(max_length=255, verbose_name='ID сессии')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP адрес')),
                ('user_agent', models.TextField(blank=True, null=True, verbose_name='User Agent')),
                ('started_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Начало сессии')),
                ('last_activity', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Последняя активность')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активна')),
                ('duration', models.DurationField(blank=True, null=True, verbose_name='Длительность')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Пользовательская сессия',
                'verbose_name_plural': 'Пользовательские сессии',
                'ordering': ['-last_activity'],
                'indexes': [models.Index(fields=['user', 'is_active'], name='analytics_u_user_id_4b29ef_idx'), models.Index(fields=['last_activity'], name='analytics_u_last_ac_32ce78_idx')],
            },
        ),
    ]
