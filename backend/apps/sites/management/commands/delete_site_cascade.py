from django.core.management.base import BaseCommand, CommandError
from django.db import transaction
from apps.sites.models import Site
from apps.sites.signals import cascade_delete_site_with_transaction
import sys


class Command(BaseCommand):
    help = '–ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –∫–∞—Å–∫–∞–¥–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —Å–∞–π—Ç–∞ —Å–æ –≤—Å–µ–º–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏'

    def add_arguments(self, parser):
        parser.add_argument(
            'site_id',
            type=int,
            help='ID —Å–∞–π—Ç–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è'
        )
        parser.add_argument(
            '--force',
            action='store_true',
            help='–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è'
        )
        parser.add_argument(
            '--dry-run',
            action='store_true',
            help='–ü–æ–∫–∞–∑–∞—Ç—å —á—Ç–æ –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–æ, –Ω–æ –Ω–µ —É–¥–∞–ª—è—Ç—å'
        )

    def handle(self, *args, **options):
        site_id = options['site_id']
        force = options['force']
        dry_run = options['dry_run']

        try:
            site = Site.objects.get(id=site_id)
        except Site.DoesNotExist:
            raise CommandError(f'–°–∞–π—Ç —Å ID {site_id} –Ω–µ –Ω–∞–π–¥–µ–Ω')

        # –°–æ–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        stats = {
            'site_name': site.name,
            'site_domain': site.domain,
            'owner': site.owner.username,
            'posts': site.posts.count(),
            'pages': site.pages.count(),
            'categories': site.categories.count(),
            'tags': site.tags.count(),
            'dynamic_models': site.dynamic_models.count(),
            'assigned_users': site.assigned_users.count(),
        }

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–º, —á—Ç–æ –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–æ
        self.stdout.write(
            self.style.WARNING(f"\nüìã –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –°–ê–ô–¢–ï:")
        )
        self.stdout.write(f"   –ù–∞–∑–≤–∞–Ω–∏–µ: {stats['site_name']}")
        self.stdout.write(f"   –î–æ–º–µ–Ω: {stats['site_domain']}")
        self.stdout.write(f"   –í–ª–∞–¥–µ–ª–µ—Ü: {stats['owner']}")
        
        self.stdout.write(
            self.style.WARNING(f"\nüóëÔ∏è  –ë–£–î–ï–¢ –£–î–ê–õ–ï–ù–û:")
        )
        self.stdout.write(f"   üìù –ü–æ—Å—Ç–æ–≤: {stats['posts']}")
        self.stdout.write(f"   üìÑ –°—Ç—Ä–∞–Ω–∏—Ü: {stats['pages']}")
        self.stdout.write(f"   üìÇ –ö–∞—Ç–µ–≥–æ—Ä–∏–π: {stats['categories']}")
        self.stdout.write(f"   üè∑Ô∏è  –¢–µ–≥–æ–≤: {stats['tags']}")
        self.stdout.write(f"   üîß –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏—Ö –º–æ–¥–µ–ª–µ–π: {stats['dynamic_models']}")
        
        if stats['assigned_users'] > 0:
            self.stdout.write(f"   üë• –ë—É–¥–µ—Ç –æ—á–∏—â–µ–Ω–æ —Å–≤—è–∑–µ–π —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏: {stats['assigned_users']}")

        total_objects = sum([
            stats['posts'], stats['pages'], stats['categories'], 
            stats['tags'], stats['dynamic_models']
        ])
        
        self.stdout.write(f"\n   üìä –í–°–ï–ì–û –û–ë–™–ï–ö–¢–û–í: {total_objects}")

        if dry_run:
            self.stdout.write(
                self.style.SUCCESS("\n‚úÖ Dry-run —Ä–µ–∂–∏–º: –Ω–∏—á–µ–≥–æ –Ω–µ —É–¥–∞–ª–µ–Ω–æ")
            )
            return

        # –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è
        if total_objects > 50:
            self.stdout.write(
                self.style.ERROR(
                    f"\n‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –ë–æ–ª—å—à–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—ä–µ–∫—Ç–æ–≤ ({total_objects})!"
                )
            )

        if stats['assigned_users'] > 0:
            self.stdout.write(
                self.style.WARNING(
                    f"\n‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: {stats['assigned_users']} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ—Ç–µ—Ä—è—é—Ç –¥–æ—Å—Ç—É–ø –∫ —Å–∞–π—Ç—É!"
                )
            )

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ—Å–ª–µ–¥–Ω–∏–π –ª–∏ —ç—Ç–æ —Å–∞–π—Ç –≤–ª–∞–¥–µ–ª—å—Ü–∞
        owner_sites_count = Site.objects.filter(owner=site.owner).count()
        if owner_sites_count == 1:
            self.stdout.write(
                self.style.ERROR(
                    f"\n‚ö†Ô∏è  –ö–†–ò–¢–ò–ß–ù–û: –≠—Ç–æ –ø–æ—Å–ª–µ–¥–Ω–∏–π —Å–∞–π—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {stats['owner']}!"
                )
            )

        # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
        if not force:
            self.stdout.write(
                self.style.ERROR(f"\n‚ùå –û–ü–ê–°–ù–ê–Ø –û–ü–ï–†–ê–¶–ò–Ø: –ö–∞—Å–∫–∞–¥–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —Å–∞–π—Ç–∞!")
            )
            
            confirm = input("\n–í—ã —É–≤–µ—Ä–µ–Ω—ã? –í–≤–µ–¥–∏—Ç–µ 'DELETE' –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: ")
            if confirm != 'DELETE':
                self.stdout.write(
                    self.style.SUCCESS("‚ùå –£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")
                )
                return

        # –í—ã–ø–æ–ª–Ω—è–µ–º —É–¥–∞–ª–µ–Ω–∏–µ
        self.stdout.write(
            self.style.WARNING("\nüîÑ –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∫–∞—Å–∫–∞–¥–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ...")
        )
        
        result = cascade_delete_site_with_transaction(site_id)
        
        if result['success']:
            self.stdout.write(
                self.style.SUCCESS(
                    f"\n‚úÖ –£–°–ü–ï–®–ù–û: –°–∞–π—Ç '{result['site_name']}' —É–¥–∞–ª–µ–Ω —Å–æ –≤—Å–µ–º–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏"
                )
            )
            self.stdout.write(f"   üìù –£–¥–∞–ª–µ–Ω–æ –ø–æ—Å—Ç–æ–≤: {result['posts_deleted']}")
            self.stdout.write(f"   üìÑ –£–¥–∞–ª–µ–Ω–æ —Å—Ç—Ä–∞–Ω–∏—Ü: {result['pages_deleted']}")
            self.stdout.write(f"   üìÇ –£–¥–∞–ª–µ–Ω–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: {result['categories_deleted']}")
            self.stdout.write(f"   üè∑Ô∏è  –£–¥–∞–ª–µ–Ω–æ —Ç–µ–≥–æ–≤: {result['tags_deleted']}")
            self.stdout.write(f"   üîß –£–¥–∞–ª–µ–Ω–æ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏—Ö –º–æ–¥–µ–ª–µ–π: {result['dynamic_models_deleted']}")
            
            if result['assigned_users_cleared'] > 0:
                self.stdout.write(f"   üë• –û—á–∏—â–µ–Ω–æ —Å–≤—è–∑–µ–π —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏: {result['assigned_users_cleared']}")
        else:
            self.stdout.write(
                self.style.ERROR(f"\n‚ùå –û–®–ò–ë–ö–ê: {result['error']}")
            )
            sys.exit(1) 