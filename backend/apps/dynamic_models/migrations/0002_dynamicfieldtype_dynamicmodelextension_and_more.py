# Generated by Django 5.0.6 on 2025-06-04 23:19

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0002_initial'),
        ('dynamic_models', '0001_initial'),
        ('sites', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DynamicFieldType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Уникальное название типа поля', max_length=50, unique=True, verbose_name='Название типа')),
                ('label', models.CharField(max_length=255, verbose_name='Отображаемое название')),
                ('category', models.CharField(choices=[('text', 'Текстовые'), ('number', 'Числовые'), ('date', 'Дата и время'), ('media', 'Медиа'), ('select', 'Выбор'), ('relation', 'Связи'), ('special', 'Специальные')], max_length=20, verbose_name='Категория')),
                ('description', models.TextField(blank=True, help_text='Описание назначения типа поля', verbose_name='Описание')),
                ('default_config', models.JSONField(default=dict, help_text='JSON конфигурация по умолчанию для этого типа поля', verbose_name='Конфигурация по умолчанию')),
                ('validation_rules', models.JSONField(default=dict, help_text='Правила валидации для этого типа поля', verbose_name='Правила валидации')),
                ('ui_component', models.CharField(blank=True, help_text='Название React компонента для отображения', max_length=255, verbose_name='UI компонент')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Тип поля',
                'verbose_name_plural': 'Типы полей',
                'ordering': ['category', 'label'],
            },
        ),
        migrations.CreateModel(
            name='DynamicModelExtension',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('target_model', models.CharField(help_text='Полное название модели (app.Model)', max_length=255, verbose_name='Целевая модель')),
                ('extension_type', models.CharField(choices=[('field_addition', 'Добавление полей'), ('field_modification', 'Модификация полей'), ('method_addition', 'Добавление методов'), ('validation_rules', 'Дополнительная валидация')], default='field_addition', max_length=20, verbose_name='Тип расширения')),
                ('field_mappings', models.JSONField(default=dict, help_text='Соответствие полей динамической модели полям целевой модели', verbose_name='Маппинг полей')),
                ('relation_config', models.JSONField(default=dict, help_text='Настройки связей с целевой моделью', verbose_name='Конфигурация связей')),
                ('migration_applied', models.BooleanField(default=False, help_text='Были ли применены изменения в базе данных', verbose_name='Миграция применена')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активно')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Расширение модели',
                'verbose_name_plural': 'Расширения моделей',
            },
        ),
        migrations.CreateModel(
            name='DynamicModelPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permission_type', models.CharField(choices=[('view', 'Просмотр'), ('add', 'Добавление'), ('change', 'Изменение'), ('delete', 'Удаление'), ('manage', 'Управление моделью')], max_length=20, verbose_name='Тип разрешения')),
                ('field_restrictions', models.JSONField(default=dict, help_text='Ограничения доступа к конкретным полям', verbose_name='Ограничения на поля')),
                ('conditions', models.JSONField(default=dict, help_text='Дополнительные условия для применения разрешения', verbose_name='Условия')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активно')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Разрешение для динамической модели',
                'verbose_name_plural': 'Разрешения для динамических моделей',
            },
        ),
        migrations.CreateModel(
            name='DynamicModelVersion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('changes_description', models.TextField(blank=True, help_text='Описание изменений в этой версии', verbose_name='Описание изменений')),
                ('is_rollback', models.BooleanField(default=False, help_text='Является ли эта версия откатом к предыдущей', verbose_name='Откат')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Версия динамической модели',
                'verbose_name_plural': 'Версии динамических моделей',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AlterUniqueTogether(
            name='dynamicmodel',
            unique_together=set(),
        ),
        migrations.AddField(
            model_name='dynamicmodel',
            name='model_type',
            field=models.CharField(choices=[('standalone', 'Отдельная модель'), ('extension', 'Расширение существующей модели')], default='standalone', help_text='Определяет, является ли модель отдельной или расширением существующей', max_length=20, verbose_name='Тип модели'),
        ),
        migrations.AddField(
            model_name='dynamicmodel',
            name='parent_model',
            field=models.ForeignKey(blank=True, help_text='Ссылка на предыдущую версию модели', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='versions', to='dynamic_models.dynamicmodel', verbose_name='Родительская модель'),
        ),
        migrations.AddField(
            model_name='dynamicmodel',
            name='target_model',
            field=models.CharField(blank=True, help_text='Модель для расширения (например: posts.Post)', max_length=255, null=True, verbose_name='Целевая модель'),
        ),
        migrations.AddField(
            model_name='dynamicmodel',
            name='validation_rules',
            field=models.JSONField(default=dict, help_text='Дополнительные правила валидации для полей', verbose_name='Правила валидации'),
        ),
        migrations.AddField(
            model_name='dynamicmodel',
            name='version',
            field=models.PositiveIntegerField(default=1, help_text='Версия модели для отслеживания изменений', verbose_name='Версия'),
        ),
        migrations.AlterUniqueTogether(
            name='dynamicmodel',
            unique_together={('site', 'name', 'version')},
        ),
        migrations.AddIndex(
            model_name='dynamicmodel',
            index=models.Index(fields=['site', 'is_active'], name='dynamic_mod_site_id_77bb96_idx'),
        ),
        migrations.AddIndex(
            model_name='dynamicmodel',
            index=models.Index(fields=['model_type'], name='dynamic_mod_model_t_d369d3_idx'),
        ),
        migrations.AddIndex(
            model_name='dynamicmodel',
            index=models.Index(fields=['target_model'], name='dynamic_mod_target__276bdf_idx'),
        ),
        migrations.AddField(
            model_name='dynamicmodelextension',
            name='dynamic_model',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='extension_config', to='dynamic_models.dynamicmodel', verbose_name='Динамическая модель'),
        ),
        migrations.AddField(
            model_name='dynamicmodelpermission',
            name='dynamic_model',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='custom_permissions', to='dynamic_models.dynamicmodel', verbose_name='Динамическая модель'),
        ),
        migrations.AddField(
            model_name='dynamicmodelpermission',
            name='role',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.role', verbose_name='Роль'),
        ),
        migrations.AddField(
            model_name='dynamicmodelpermission',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь'),
        ),
        migrations.AddField(
            model_name='dynamicmodelversion',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Создано пользователем'),
        ),
        migrations.AddField(
            model_name='dynamicmodelversion',
            name='dynamic_model',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='version_history', to='dynamic_models.dynamicmodel', verbose_name='Динамическая модель'),
        ),
        migrations.AddField(
            model_name='dynamicmodelversion',
            name='parent_version',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='child_versions', to='dynamic_models.dynamicmodel', verbose_name='Родительская версия'),
        ),
        migrations.AlterUniqueTogether(
            name='dynamicmodelextension',
            unique_together={('dynamic_model', 'target_model')},
        ),
        migrations.AlterUniqueTogether(
            name='dynamicmodelpermission',
            unique_together={('dynamic_model', 'user', 'role', 'permission_type')},
        ),
    ]
