#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –æ—Å–Ω–æ–≤–Ω—ã—Ö API endpoints
"""

import requests
import json

BASE_URL = 'http://127.0.0.1:8000/api/v1'

def test_swagger():
    """–¢–µ—Å—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ Swagger –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏"""
    print("üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º Swagger –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é...")
    try:
        response = requests.get(f'{BASE_URL}/swagger/')
        if response.status_code == 200:
            print("‚úÖ Swagger –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞")
            return True
        else:
            print(f"‚ùå Swagger –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Swagger: {e}")
        return False

def test_auth_endpoints():
    """–¢–µ—Å—Ç endpoints –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"""
    print("\nüîê –¢–µ—Å—Ç–∏—Ä—É–µ–º API –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...")
    
    # –¢–µ—Å—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    login_data = {
        'email': 'admin@example.com',
        'password': 'admin123'
    }
    
    try:
        response = requests.post(f'{BASE_URL}/auth/token/', json=login_data)
        
        if response.status_code == 200:
            data = response.json()
            print("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!")
            print(f"   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {data.get('username', 'N/A')}")
            print(f"   –†–æ–ª—å: {data.get('role_display', 'N/A')}")
            return data.get('access')
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {response.status_code}")
            print(f"   –û—Ç–≤–µ—Ç: {response.text}")
            return None
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return None

def test_sites_endpoint(token):
    """–¢–µ—Å—Ç endpoints —Å–∞–π—Ç–æ–≤"""
    print("\nüåê –¢–µ—Å—Ç–∏—Ä—É–µ–º API —Å–∞–π—Ç–æ–≤...")
    
    if not token:
        print("‚ùå –ù–µ—Ç —Ç–æ–∫–µ–Ω–∞ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏")
        return
    
    headers = {'Authorization': f'Bearer {token}'}
    
    try:
        response = requests.get(f'{BASE_URL}/sites/', headers=headers)
        
        if response.status_code == 200:
            data = response.json()
            print("‚úÖ API —Å–∞–π—Ç–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç!")
            print(f"   –ù–∞–π–¥–µ–Ω–æ —Å–∞–π—Ç–æ–≤: {data.get('count', 0)}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ API —Å–∞–π—Ç–æ–≤: {response.status_code}")
            print(f"   –û—Ç–≤–µ—Ç: {response.text}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API...")
    
    # –¢–µ—Å—Ç Swagger
    swagger_ok = test_swagger()
    
    # –¢–µ—Å—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    token = test_auth_endpoints()
    
    # –¢–µ—Å—Ç API —Å–∞–π—Ç–æ–≤
    if token:
        test_sites_endpoint(token)
    
    print("\n" + "="*50)
    if swagger_ok and token:
        print("üéâ –í—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–µ—Ä–≤–µ—Ä.")
    print("="*50)

if __name__ == '__main__':
    main() 