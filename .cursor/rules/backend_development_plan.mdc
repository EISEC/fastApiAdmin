---
description: 
globs: 
alwaysApply: false
---
# План разработки бэкенда на FastAPI + MySQL

Папка разработки проекта backend

Данные для Mysql

имя базы данных = eisec_fastapi
имя пользователя базы данных = eisec_fastapi
пароль базы данных = yaUKdfr!ZQ0y
сервер базы данных = eisec.beget.tech

## 1. Структура проекта
```
backend/
├── alembic/                 # Миграции базы данных
├── app/
│   ├── api/                # API endpoints
│   ├── core/               # Основные настройки
│   ├── crud/               # CRUD операции
│   ├── db/                 # Настройки базы данных
│   ├── models/             # SQLAlchemy модели
│   ├── schemas/            # Pydantic схемы
│   └── services/           # Бизнес-логика
├── tests/                  # Тесты
└── main.py                 # Точка входа
```

## 2. Модели данных

### 2.1 Пользователи (Users)
- Основные поля:
  - id (PK)
  - username (unique)
  - email (unique)
  - password_hash
  - birth_date
  - about
  - site_id (FK)
  - role_id (FK)
  - is_active
  - rating
  - created_at
  - updated_at

### 2.2 Контакты пользователей (UserContacts)
- Основные поля:
  - id (PK)
  - user_id (FK)
  - contact_type (email/phone/social)
  - value
  - is_verified
  - created_at
  - updated_at

### 2.3 Роли (Roles)
- Предопределенные роли:
  - Суперадминистратор
  - Администратор
  - Автор
  - Модератор
  - Пользователь

### 2.4 Сайты (Sites)
- Основные поля:
  - id (PK)
  - name
  - domain
  - header_scripts
  - footer_scripts
  - main_screen_settings
  - seo_settings
  - icon
  - default_image
  - main_screen_image
  - error_403_image
  - error_404_image
  - error_4xx_image
  - error_5xx_image
  - created_at
  - updated_at

### 2.5 Страницы (Pages)
- Основные поля:
  - id (PK)
  - site_id (FK)
  - title
  - content
  - slug
  - image
  - created_at
  - updated_at

### 2.6 Посты (Posts)
- Основные поля:
  - id (PK)
  - site_id (FK)
  - title
  - content
  - slug
  - image
  - created_at
  - updated_at

### 2.7 Динамические модели (DynamicModels)
- Основные поля:
  - id (PK)
  - name
  - site_id (FK)
  - fields_config (JSON)
  - created_at
  - updated_at

## 3. API Endpoints

### 3.1 Аутентификация
- POST /api/v1/auth/register
- POST /api/v1/auth/login
- POST /api/v1/auth/verify-email
- POST /api/v1/auth/refresh-token

### 3.2 Пользователи
- GET /api/v1/users
- GET /api/v1/users/{user_id}
- POST /api/v1/users
- PUT /api/v1/users/{user_id}
- DELETE /api/v1/users/{user_id}
- POST /api/v1/users/{user_id}/contacts
- DELETE /api/v1/users/{user_id}/contacts/{contact_id}

### 3.3 Роли
- GET /api/v1/roles
- GET /api/v1/roles/{role_id}

### 3.4 Сайты
- GET /api/v1/sites
- GET /api/v1/sites/{site_id}
- POST /api/v1/sites
- PUT /api/v1/sites/{site_id}
- DELETE /api/v1/sites/{site_id}

### 3.5 Страницы
- GET /api/v1/sites/{site_id}/pages
- GET /api/v1/sites/{site_id}/pages/{page_id}
- POST /api/v1/sites/{site_id}/pages
- PUT /api/v1/sites/{site_id}/pages/{page_id}
- DELETE /api/v1/sites/{site_id}/pages/{page_id}

### 3.6 Посты
- GET /api/v1/sites/{site_id}/posts
- GET /api/v1/sites/{site_id}/posts/{post_id}
- POST /api/v1/sites/{site_id}/posts
- PUT /api/v1/sites/{site_id}/posts/{post_id}
- DELETE /api/v1/sites/{site_id}/posts/{post_id}

### 3.7 Динамические модели
- GET /api/v1/sites/{site_id}/dynamic-models
- GET /api/v1/sites/{site_id}/dynamic-models/{model_id}
- POST /api/v1/sites/{site_id}/dynamic-models
- PUT /api/v1/sites/{site_id}/dynamic-models/{model_id}
- DELETE /api/v1/sites/{site_id}/dynamic-models/{model_id}
- GET /api/v1/sites/{site_id}/dynamic-models/{model_id}/items
- POST /api/v1/sites/{site_id}/dynamic-models/{model_id}/items
- PUT /api/v1/sites/{site_id}/dynamic-models/{model_id}/items/{item_id}
- DELETE /api/v1/sites/{site_id}/dynamic-models/{model_id}/items/{item_id}

## 4. Основные компоненты

### 4.1 Аутентификация и авторизация
- JWT токены
- Хеширование паролей
- Проверка email
- Middleware для проверки прав доступа

### 4.2 Работа с файлами
- Загрузка и хранение изображений
- Валидация типов файлов
- Оптимизация изображений

### 4.3 Динамические модели
- Генерация CRUD операций
- Автоматическая генерация Swagger документации
- Валидация полей
- Миграции схемы базы данных

### 4.4 Безопасность
- Rate limiting
- CORS
- Валидация входных данных
- Защита от SQL-инъекций
- Логирование действий

## 5. Технологии

### 5.1 Основные
- FastAPI
- SQLAlchemy
- Alembic
- Pydantic
- MySQL
- Python-jose (JWT)
- Passlib (хеширование паролей)
- Python-multipart (загрузка файлов)
- Pillow (работа с изображениями)

### 5.2 Тестирование
- Pytest
- Pytest-asyncio
- Pytest-cov

### 5.3 Документация
- Swagger UI
- ReDoc

## 6. Этапы разработки

1. Настройка проекта и окружения
2. Создание базовых моделей и миграций
3. Реализация аутентификации и авторизации
4. Разработка CRUD операций для пользователей
5. Разработка CRUD операций для сайтов
6. Разработка CRUD операций для страниц и постов
7. Реализация системы динамических моделей
8. Добавление загрузки и обработки файлов
9. Написание тестов
10. Документация API
11. Оптимизация и рефакторинг
12. Развертывание

## 7. Дополнительные модели и улучшения

### 7.1 Дополнительные модели

#### 7.1.1 Категории (Categories)
- Основные поля:
  - id (PK)
  - site_id (FK)
  - name
  - slug
  - description
  - parent_id (FK, self-reference)
  - image
  - created_at
  - updated_at
- Использование:
  - Группировка постов
  - Группировка страниц
  - Группировка динамических моделей

#### 7.1.2 Теги (Tags)
- Основные поля:
  - id (PK)
  - site_id (FK)
  - name
  - slug
  - created_at
  - updated_at
- Связи:
  - Many-to-Many с постами
  - Many-to-Many со страницами
  - Many-to-Many с динамическими моделями

#### 7.1.3 Комментарии (Comments)
- Основные поля:
  - id (PK)
  - user_id (FK)
  - content
  - parent_id (FK, self-reference)
  - status (pending/approved/rejected)
  - created_at
  - updated_at
- Связи:
  - Полиморфная связь с постами/страницами/динамическими моделями

#### 7.1.4 Медиафайлы (Media)
- Основные поля:
  - id (PK)
  - site_id (FK)
  - user_id (FK)
  - file_name
  - file_path
  - file_type
  - file_size
  - mime_type
  - alt_text
  - created_at
  - updated_at

#### 7.1.5 Настройки (Settings)
- Основные поля:
  - id (PK)
  - site_id (FK)
  - key
  - value
  - type (string/number/boolean/json)
  - created_at
  - updated_at

#### 7.1.6 Логи действий (ActivityLogs)
- Основные поля:
  - id (PK)
  - user_id (FK)
  - action_type
  - entity_type
  - entity_id
  - changes (JSON)
  - ip_address
  - user_agent
  - created_at

### 7.2 Улучшения функционала

#### 7.2.1 Управление пользователями
- Добавить систему уведомлений
- Добавить двухфакторную аутентификацию
- Добавить историю входов
- Добавить возможность восстановления пароля
- Добавить систему блокировки аккаунта

#### 7.2.2 Управление контентом
- Добавить систему версионирования контента
- Добавить черновики
- Добавить планировщик публикаций
- Добавить систему ревизий
- Добавить возможность отката изменений

#### 7.2.3 SEO и аналитика
- Добавить мета-теги для страниц
- Добавить Open Graph теги
- Добавить интеграцию с Google Analytics
- Добавить систему сбора статистики
- Добавить карту сайта (sitemap.xml)

#### 7.2.4 Безопасность
- Добавить систему аудита безопасности
- Добавить защиту от брутфорс атак
- Добавить систему блокировки IP
- Добавить мониторинг подозрительной активности
- Добавить систему бэкапов

#### 7.2.5 Производительность
- Добавить кэширование
- Добавить систему очередей для тяжелых операций
- Добавить оптимизацию изображений
- Добавить CDN интеграцию
- Добавить систему мониторинга производительности

#### 7.2.6 API улучшения
- Добавить rate limiting для API
- Добавить API версионирование
- Добавить API документацию в формате OpenAPI
- Добавить систему API ключей
- Добавить мониторинг использования API

#### 7.2.7 Мультиязычность
- Добавить поддержку множества языков
- Добавить систему переводов
- Добавить автоматическое определение языка
- Добавить возможность переключения языков
- Добавить RTL поддержку

#### 7.2.8 Интеграции
- Добавить интеграцию с социальными сетями
- Добавить систему email-рассылок
- Добавить интеграцию с платежными системами
- Добавить интеграцию с сервисами аналитики
- Добавить webhook систему

### 7.3 Дополнительные технологии

#### 7.3.1 Кэширование
- Redis
- Memcached

#### 7.3.2 Очереди
- Celery
- RabbitMQ
- Redis Queue

#### 7.3.3 Мониторинг
- Prometheus
- Grafana
- Sentry

#### 7.3.4 Поиск
- Elasticsearch
- Meilisearch

#### 7.3.5 Хранение файлов
- MinIO
- AWS S3
- Google Cloud Storage

### 7.4 Рекомендации по масштабированию

#### 7.4.1 Горизонтальное масштабирование
- Использование балансировщиков нагрузки
- Репликация базы данных
- Шардирование данных
- Микросервисная архитектура

#### 7.4.2 Вертикальное масштабирование
- Оптимизация запросов
- Индексация базы данных
- Кэширование на разных уровнях
- Оптимизация работы с файлами

#### 7.4.3 Мониторинг и алертинг
- Система мониторинга производительности
- Автоматические алерты
- Логирование критических операций
- Метрики бизнес-процессов
